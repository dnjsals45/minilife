name: Backend Continuous Deployment

on:
  push:
    branches: ["main"]
  paths:
    - 'backend/**'
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log Level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - error
      enviornment:
        description: "Environment"
        required: false
        type: environment

permissions:
  contents: read

jobs:
  docker:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    env:
      REPO: ${{ secrets.DOCKER_REPO }}
    steps:

      # JDK 17 세팅
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@3
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradle caching - 빌드 시간이 향상된다고 함(선택 사항)
      - name: gradle caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/cache
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: execute permission for gradlew
        run: chmod +x gradlew

      - name: build docker
        run: ./gradlew bootBuildImage --imageName=$REPO

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWD }}

      - name: Publish Docker Image
        run: docker push $REPO:latest

      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-access-secret-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Add Github Actions IP to Security Group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: SSH Commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_SSH_HOST }}
          username: ${{ secrets.AWS_SSH_USER }}
          password: ${{ secrets.AWS_SSH_PASSWD }}
          port: ${{ secrets.AWS_SSH_PORT }}
          script: |
            ./ministory_backend_deploy.sh

      - name: Remove Github Actions IP from Security Group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
