name: Backend Continuous Deployment

on:
  push:
    branches: ["main"]
    paths:
      - 'back/**'
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log Level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - error
      environment:
        description: "Environment"
        required: false
        type: environment

permissions:
  contents: read

jobs:
  docker:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    env:
      REPO: ${{ secrets.DOCKER_BACK_REPO }}
      KEYALIAS: ${{ secrets.SSL_KEY_ALIAS }}
      STOREPASSWORD: ${{ secrets.SSL_KEY_STORE_PASSWORD }}
      STORETYPE: ${{ secrets.SSL_KEY_STORE_TYPE }}
      KEYDOMAIN: ${{ secrets.SSL_KEY_DOMAIN }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: gradle caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/cache
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate keystore
        run: |
          keytool -genkeypair -alias $KEYALIAS -keyalg RSA -keysize 2048 -storetype $STORETYPE -keystore keystore.p12 -validity 3650 -storepass $STOREPASSWORD -dname "CN=$KEYDOMAIN, OU=backend, O=ministory, L=Seoul, S=Seoul, C=KR"
        working-directory: ./back/ministory

      - name: Move keystore to resources
        run: |
          mkdir -p ./src/main/resources
          mv keystore.p12 ./src/main/resources/keystore.p12
        working-directory: ./back/ministory

      - name: execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./back/ministory

      - name: build docker
        run: ./gradlew bootBuildImage --imageName=$REPO
        working-directory: ./back/ministory

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWD }}

      - name: Publish Docker Image
        run: docker push $REPO:latest

      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Add Github Actions IP to Security Group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: SSH Commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_SSH_HOST }}
          username: ${{ secrets.AWS_SSH_USER }}
          password: ${{ secrets.AWS_SSH_PASSWD }}
          port: ${{ secrets.AWS_SSH_PORT }}
          script: |
            ./ministory_backend_deploy.sh

      - name: Remove Github Actions IP from Security Group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
