spring.config.activate.on-profile: prod

server:
  port: 8081

ssh:
  host: ${SSH_HOST}
  user: ${SSH_USER}
  port: ${SSH_PORT}
  database-port: ${SSH_DATABASE_PORT}
  password: ${SSH_PASSWD}

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  jpa:
    database: mysql
    open-in-view: false
    generate-ddl: false
    hibernate:
      ddl-auto: none
    show-sql: true
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            redirect-uri: ${GITHUB_REDIRECT_URI}
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            scope:
              - profile
              - email
  cloud:
    aws:
      credentials:
        access-key: ${AWS_S3_IAM_ACCESS_KEY}
        secret-key: ${AWS_S3_IAM_SECRET_KEY}
      s3:
        bucket: ${AWS_S3_BUCKET}
      region:
        static: ap-northeast-2
      stack:
        auto: false
  cors:
    allowed-origins: ${CORS_ORIGINS}
  cache:
    type: redis
    redis:
      host: localhost
      port: 6379

jwt:
  secret:
    access-secret-key: ${JWT_ACCESS_SECRET}
    refresh-secret-key: ${JWT_REFRESH_SECRET}
  token:
    access-expiration: 3600000 # 1시간(1000(ms) * 60(m) * 60(h))
    access-header: Authorization
    refresh-expiration: 86400000 # 1일(1000(ms) * 60(m) * 60(h) * 24(h))

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: /swagger
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: alpha
  api-docs:
    groups:
      enabled: true

---
spring.config.activate.on-profile: dev

server:
#  ssl:
#    enabled: true
#    key-store: keystore.p12
#    key-store-password: SMzkdl139!
#    key-store-type: PKCS12
#    key-alias: bns-ssl
  port: 8080

ssh:
  host: ${SSH_HOST}
  user: ${SSH_USER}
  port: ${SSH_PORT}
  database-port: ${SSH_DATABASE_PORT}
  password: ${SSH_PASSWD}

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DEV_DB_URL}
    username: ${DEV_DB_USER}
    password: ${DEV_DB_PASSWORD}
  jpa:
    database: mysql
    open-in-view: false
    generate-ddl: false
    hibernate:
      ddl-auto: none
    show-sql: true
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${DEV_GITHUB_CLIENT_ID}
            client-secret: ${DEV_GITHUB_CLIENT_SECRET}
            redirect-uri: ${DEV_GITHUB_REDIRECT_URI}
          google:
            client-id: ${DEV_GOOGLE_CLIENT_ID}
            client-secret: ${DEV_GOOGLE_CLIENT_SECRET}
            redirect-uri: ${DEV_GOOGLE_REDIRECT_URI}
            scope:
              - profile
              - email
  cloud:
    aws:
      credentials:
        access-key: ${AWS_S3_IAM_ACCESS_KEY}
        secret-key: ${AWS_S3_IAM_SECRET_KEY}
      s3:
        bucket: ${AWS_S3_BUCKET}
      region:
        static: ap-northeast-2
      stack:
        auto: false
  cors:
    allowed-origins: ${CORS_ORIGINS}
  cache:
    type: redis
    redis:
      host: localhost
      port: 6379

jwt:
  secret:
    access-secret-key: ${JWT_ACCESS_SECRET}
    refresh-secret-key: ${JWT_REFRESH_SECRET}
  token:
    access-expiration: 3600000 # 1시간(1000(ms) * 60(m) * 60(h))
    access-header: Authorization
    refresh-expiration: 86400000 # 1일(1000(ms) * 60(m) * 60(h) * 24(h))

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: /swagger
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: alpha
  api-docs:
    groups:
      enabled: true